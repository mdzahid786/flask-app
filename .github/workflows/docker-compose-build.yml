name: Build and Push Docker Images

on:
  push:
    branches:
      - master
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Detect changes (backend / frontend)
      - name: Detect changed services
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Step 4: Set tags
      - name: Set image tags
        id: vars
        run: |
          echo "sha_tag=${GITHUB_SHA::7}" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "release_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "release_tag=" >> $GITHUB_ENV
          fi

      # Step 5: Build & Push Backend (only if changed)
      - name: Build & Push Backend
        if: steps.changes.outputs.backend == 'true'
        run: |
          IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/flask-app-backend
          docker build -t $IMAGE:latest ./backend
          docker tag $IMAGE:latest $IMAGE:${sha_tag}
          docker push $IMAGE:latest
          docker push $IMAGE:${sha_tag}
          if [ -n "${release_tag}" ]; then
            docker tag $IMAGE:latest $IMAGE:${release_tag}
            docker push $IMAGE:${release_tag}
          fi

      # Step 6: Build & Push Frontend (only if changed)
      - name: Build & Push Frontend
        if: steps.changes.outputs.frontend == 'true'
        run: | 
          IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/flask-app-frontend
          docker build -t $IMAGE:latest ./frontend
          docker tag $IMAGE:latest $IMAGE:${sha_tag}
          docker push $IMAGE:latest
          docker push $IMAGE:${sha_tag}
          if [ -n "${release_tag}" ]; then
            docker tag $IMAGE:latest $IMAGE:${release_tag}
            docker push $IMAGE:${release_tag}
          fi
